// <auto-generated />
using System;
using ContentSvc.WebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContentSvc.WebApi.Migrations
{
    [DbContext(typeof(ContentSvcContext))]
    [Migration("20210713030315_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ContentSvc.Model.Entities.MinioUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("AccessKey")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<string>("SecretKey")
                        .HasColumnName("secret_key")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ServiceId")
                        .HasColumnName("service_id")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_minio_users");

                    b.HasIndex("ServiceId")
                        .HasName("ix_minio_users_service_id");

                    b.ToTable("minio_users");
                });

            modelBuilder.Entity("ContentSvc.Model.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnName("creator_id")
                        .HasColumnType("int");

                    b.Property<Guid>("DeletedFlag")
                        .HasColumnName("deleted_flag")
                        .HasColumnType("char(36)");

                    b.Property<string>("Desc")
                        .HasColumnName("desc")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4")
                        .HasMaxLength(16);

                    b.HasKey("Id")
                        .HasName("pk_services");

                    b.ToTable("services");
                });

            modelBuilder.Entity("ContentSvc.Model.Entities.MinioUser", b =>
                {
                    b.HasOne("ContentSvc.Model.Entities.Service", "Service")
                        .WithMany("MinioUsers")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("fk_minio_users_services_service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
